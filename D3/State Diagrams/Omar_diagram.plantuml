@startuml
 
[*] --> Idle
 
state Idle {
  Idle :       None
}
 
state ProcessingLogin {
  ProcessingLogin :       user_input
  ProcessingLogin :       ----
  ProcessingLogin :       login_status
}
 
state LoginSuccessful {
  LoginSuccessful :       valid_credentials
  LoginSuccessful :       ----
  LoginSuccessful :       load_dashboard
}
 
state LoginFailed {
  LoginFailed :       invalid_credentials
  LoginFailed :       ----
  LoginFailed :       display_error
}
 
state CreatingAccount {
  CreatingAccount :       user_details
  CreatingAccount :       ----
  CreatingAccount :       account_status
}
 
state AccountCreationSuccessful {
  AccountCreationSuccessful :       verified_user
  AccountCreationSuccessful :       ----
  AccountCreationSuccessful :       confirmation_message
}
 
state AccountCreationFailed {
  AccountCreationFailed :       invalid_or_duplicate
  AccountCreationFailed :       ----
  AccountCreationFailed :       error_message
}
 
state DisplayingUserInfo {
  DisplayingUserInfo :       user_request
  DisplayingUserInfo :       ----
  DisplayingUserInfo :       profile_data
}
 
state EditingUserInfo {
  EditingUserInfo :       modified_data
  EditingUserInfo :       ----
  EditingUserInfo :       update_status
}
 
state SavingChanges {
  SavingChanges :       submitted_changes
  SavingChanges :       ----
  SavingChanges :       save_confirmation
}
 
state UpdateSuccessful {
  UpdateSuccessful :       validated_changes
  UpdateSuccessful :       ----
  UpdateSuccessful :       updated_profile
}
 
state UpdateFailed {
  UpdateFailed :       invalid_changes
  UpdateFailed :       ----
  UpdateFailed :       error_message
}
 
state RetrievingUserHistory {
  RetrievingUserHistory :       user_request
  RetrievingUserHistory :       ----
  RetrievingUserHistory :       activity_list
}
 
state DisplayingUserHistory {
  DisplayingUserHistory :       retrieved_data
  DisplayingUserHistory :       ----
  DisplayingUserHistory :       history_logs
}
 
state FetchingCarCollection {
  FetchingCarCollection :       user_request
  FetchingCarCollection :       ----
  FetchingCarCollection :       car_list
}
 
state DisplayingCarCollection {
  DisplayingCarCollection :       retrieved_car_data
  DisplayingCarCollection :       ----
  DisplayingCarCollection :       car_display
}
 
state ErrorState {
  ErrorState :       system_error
  ErrorState :       ----
  ErrorState :       error_report
}
 
state Logout {
  Logout :       logout_request
  Logout :       ----
  Logout :       logout_confirmation
}
 
Idle --> ProcessingLogin : User enters login details
ProcessingLogin --> LoginSuccessful : Login successful
ProcessingLogin --> LoginFailed : Login failed
 
LoginFailed --> Idle : Retry login
 
Idle --> CreatingAccount : User registers new account
CreatingAccount --> AccountCreationSuccessful : Account created successfully
CreatingAccount --> AccountCreationFailed : Account creation failed
 
AccountCreationFailed --> Idle : Retry or Exit
 
LoginSuccessful --> DisplayingUserInfo : User requests account details
DisplayingUserInfo --> EditingUserInfo : User edits profile
EditingUserInfo --> SavingChanges : User submits updates
SavingChanges --> UpdateSuccessful : Save successful
SavingChanges --> UpdateFailed : Save failed
 
UpdateFailed --> ErrorState : System error
 
LoginSuccessful --> RetrievingUserHistory : User requests history
RetrievingUserHistory --> DisplayingUserHistory : History retrieved
 
LoginSuccessful --> FetchingCarCollection : User opens car collection
FetchingCarCollection --> DisplayingCarCollection : Car collection retrieved
 
LoginSuccessful --> Logout : User logs out
DisplayingUserInfo --> Logout : User logs out
 
ErrorState --> Idle : Restart system
Logout --> [*]
UpdateSuccessful --> [*]
DisplayingUserHistory --> [*]
DisplayingCarCollection --> [*]
AccountCreationSuccessful --> [*]
 
@enduml